#!/usr/bin/env bash
# FUNÇÕES
function wdVerify() {
	if [[ $1 = criado ]]; then
		if [[ -f $2 ]]; then
			echo "o arquivo foi criado"
		else
			echo "o arquivo não foi criado"
		fi
	elif [[ $1 = existe ]]; then
		if [[ -f $2 ]]; then
			echo "o arquivo $2 existe"
		else
			echo "erro: o arquivo $2 não esxiste"
		fi
	fi
}

function wdResolve() {
	if [[ $1 = clean ]]; then
		rm -rf *[!'backup.tar.gz']*
		wdResolve reinstall

	elif [[ $1 = reinstall ]]; then
		tar -xzvf backup.tar.gz
		chmod +x wildlist
		rm bin/*
		clang lib/datasH4.c -o bin/genHeavy
		clang lib/datasL4.c -o bin/genLight

	elif [[ $1 = pull ]]; then
		git pull
		wdResolve reinstall

	else
		echo "erro: parametro da função wdResolve"
	fi
	exit
}


function wdBanner() {
	echo "WILDIST"
}

function wdHelp() {
	wdBanner
	cat README.md
	echo "uso: ./wildist.sh [funções] [parametros]"
	exit
}

function genLight() {
	if [[ -f "bin/WD_L" ]]; then
		./bin/WD_L
	else
		echo "o arquivo $PWD/bin/WD_L não existe"
		read -p "deseja resolver esse problema?[Y/n] " tmp
		if [[ $tmp = y ]] || [[ -z $tmp ]]; then
			wdResolve reinstall
		else
			echo "finalizando"
		fi
	fi
	wdVerify criado wordlists/wl-light.txt
}

function genHeavy() {
	if [[ -f "bin/WD_H" ]]; then
		./bin/WD_H
	else
		echo "o arquivo $PWD/bin/WD_H não existe"
		read -p "deseja resolver esse problema?[Y/n] " tmp
		if [[ $tmp = y ]] || [[ -z $tmp ]]; then
			wdResolve reinstall
		else
			echo "finalizando"
		fi
	fi
	wdVerify criado wordlists/wl-heavy.txt
}

# RECONHECER ENTRADAS
# esperadas execussões pós ./wildist
#    || -h		executar wdHelp e fechar
# -g $arg 		identificar $arg e executar wdGenerate
# -r $arg 		identificar $arg e executar wdResolve
# -i 			instalar dependencias e compilar lib/
while getopts ":hig:r:" arg; do
	case $arg in
		h)
			wdHelp
			;;
		i)
			wdResolve reinstall
			exit
			;;
		g)
			gen="${OPTARG}"
			if [[ $gen = heavy ]]; then
				genHeavy
			elif [[ $gen = light ]]; then
				genLight
			else
				wdHelp
				echo "o tipo de wordlist $gen não existe"
			fi
			;;
		r)
			res=${OPTARG}
			if [[ res = clean ]]; then
				wdResolve clean
			elif [[ res = reinstall ]]; then
				wdResolve reinstall
			elif [[ res = pull ]]; then
				wdResolve pull
			else
				wdHelp
				echo "a função resolve $res não existe!"
			fi
	esac
done

if [[ -z $1 ]]; then
	wdHelp
fi
